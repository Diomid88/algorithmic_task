<!-- Проверка на количество элементов в массиве
<?php
	// $arr = [1, 2, 3, 4, 5];
    // if (count($arr) == 3){
    //    echo $res = $arr[0] + $arr[1] +$arr[2];
    // } else {
    //     if (count($arr) < 3) {
    //         echo 'В массиве меньше 3 элементов';
    //     } else {
    //         echo 'В массиве больше 3 элементов';
    //     }
    // }
?> 
-->

<!-- Проверка на равенство последнего числа
<?php
	// $str = '123450';
	// $last = $str[strlen($str) - 1];
	
	// if ($last == 0) {
	// 	echo '0';
	// }
?>
-->

<!-- Проверка четное или не четное число
<?php
	// $number = 6;
    // $res = $number % 2;
    // if ($res == 0){
    //     echo "Число $number четное";
    // } else {
    //     echo "Число $number не четное";
    // }
?>
-->

<!-- Проверка что число делится на 3
<?php
	// $number = 12;
    // $res = $number % 3;
    // if ($res == 0){
    //     echo "Число $number делится на 3";
    // } else {
    //     echo "Число $number не делится на 3";
    // }
?>
-->
<!-- Проверьте, что первым символом этой строки является буква 'a'.
<?php
    // $str = 'cabcde';
    // if ($str[0] == 'a') {
    //     echo "Первый символ строки 'a'";
    // } else {
    //     echo "FALSE";
    // }
?>
-->

<!-- Дано число, например, 12345. Проверьте, что первым символом этого числа является цифра 1, 2 или 3.
<?php
    // $str = 45;
    // $str = (string)$str;
    // if (isset($str[0]) and isset($str[1]) and isset($str[2])){
    //     if ($str[0] == 1 or $str[1] == 2 or $str[2] == 3) {
    //         echo "Первый символ строки цифра 1, 2 или 3";
    //     } 
    // } else {
    //     echo "В строке меньше 3 символов";
    // }
?> -->

<!-- Дано трехзначное число. Найдите сумму цифр этого числа.
<?php
    // $numbers = 123;
    // $numbers = (string)$numbers;
    // $res = $numbers[0] + $numbers[1] + $numbers[2];
    // echo $res;
?> -->

<!-- Дано число из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. <br>
<?php
    // $number = 871871;
    // $number = (string)$number;

    // $sum1 = $number[0] + $number[1] + $number[2];
    // $sum2 = $number[3] + $number[4] + $number[5];

    // if($sum1 == $sum2) {
    //     echo "сумма первых трех цифр равняется сумме вторых трех цифр";
    // } else {
    //     echo "сумма первых трех цифр не равняется сумме вторых трех цифр";
    // };
?>  -->

<!-- Дан массив. Выведите столбец элементов этого массива на экран.
<?php
	// $arr = ['a', 'b', 'c', 'd', 'e'];

    // foreach ($arr as $elem) {
    //     echo $elem . '<br>';
    // };
?> -->

<!-- Дан массив. Найдите сумму элементов этого массива и выведите ее на экран.
<?php
	// $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
    // $res = 0;

    // foreach ($arr as $elem) {
    //     $res = $res + $elem;
    //     // $res += $elem;
    // }

    // echo $res;
?> -->

<!-- Дан массив. Найдите среднее арифметическое его элементов.
<?php
	// $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
    // $res = 0;
    // $sum = count($arr);
    // foreach ($arr as $elem) {
    //     $res += $elem;
    // };

    // echo $res / $sum;
?> -->

<!-- Дан массив. С помощью цикла foreach выведите на экран столбец ключей и элементов в формате green - зеленый.
<?php
	// $arr = ['green' => 'зеленый', 'red' => 'красный','blue' => 'голубой'];

    // foreach ($arr as $key => $elem) {
    //     echo $key . '-' . $elem . '<br>';
    // };
?> -->

<!-- Дан массив. С помощью цикла foreach выведите на экран столбец строк такого формата: user1 - возраст 30 лет.
<?php
	// $arr = ['user1' => 30, 'user2' => 32, 'user3' => 33];
    // foreach ($arr as $key => $elem) {
    //     echo $key . ' - возраст ' . $elem . ' лет. <br>';
    // }
?> -->

<!-- С помощью цикла foreach и оператора if выведите в консоль нечетные элементы массива.
<?php
	// $arr = [1, 2, 3, 4, 5];
    // foreach ($arr as $elem) {
    //     if ($elem % 2 !== 0) {
    //         echo $elem . '<br>';
    //     };
    // };
?> -->

<!-- С помощью цикла foreach и оператора if выведите в консоль те элементы массива, которые больше 3-х, но меньше 10.
<?php
	// $arr = [2, 5, 9, 15, 1, 4];
    // foreach ($arr as $elem) {
    //     if ($elem > 3 and $elem < 10) {
    //         echo $elem . '<br>';
    //     }
    // }
?> -->

<!-- Дан массив с числами. Числа могут быть положительными и отрицательными. Найдите сумму положительных элементов массива.
<?php
    // $arr = [4, 5, 1, -10, 457, 345, -45, -213, 54, 6, 9, -7];
    // $res = 0;
    // foreach ($arr as $elem) {
    //     if ($elem > 0) {
    //         $res += $elem;
    //     };
    // };
    // echo $res;
?> -->

<!-- Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.
<?php
	// $arr = [10, 20, 30, 50, 235, 3000, 245, 6585, 745, 545436, 143214, 24325, 1, 2, 5, 6, 7];
    // foreach ($arr as $elem) {
    //     $elem = (string)$elem;
    //     if ($elem[0] == 1 or $elem[0] == 2 or $elem[0] == 5) {
    //         echo $elem . '<br>';
    //     }
    // }
?> -->

<!-- Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а выходные дни выведите жирным.
<?php   
    // $dayWeek = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'];
    // foreach ($dayWeek as $key => $elem) {
    //     if ($key < 5) {
    //         echo $elem . '<br>';
    //     } else {
    //         echo '<b>' . $elem . '</b> <br>';
    //     }
    // }
?> -->

<!-- Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а текущий день выведите курсивом. 
Номер текущего дня должен храниться в переменной $day.
<?php
    // $dayWeek = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'];
    // $day = 'Среда';
    // foreach ($dayWeek as $elem) {
    //     if ($elem !== $day) {
    //         echo $elem . '<br>';
    //     } else {
    //         echo '<b>' . $elem . '</b> <br>';
    //     }
    // }
?> -->

<!-- Выведите на экран числа от 1 до 100.
<?php
    // $i = 1;
    // while ($i <= 100) {
    //     echo $i . '<br>';
    //     $i++;
    // }
?> -->

<!-- Выведите на экран числа 11 до 33.
<?php
    // $i = 11;
    // while ($i <= 33) {
    //     echo $i . '<br>';
    //     $i++;
    // }
?> -->

<!-- Выведите на экран четные числа в промежутке от 0 до 100.
<?php
    // $i = 2;
    // while ($i <= 100) {
    //     echo $i . '<br>';
    //     $i += 2;
    // }
?> -->

<!-- Выведите на экран нечетные числа в промежутке от 1 до 99.
<?php
    // $i = 1;
    // while ($i <= 100) {
    //     echo $i . '<br>';
    //     $i += 2;
    // }
?> -->

<!-- Выведите на экран числа от 30 до 0.
<?php
    // $i = 30;
    // while ($i >= 0) {
    //     echo $i . '<br>';
    //     $i--;
    // }
?>  -->

<!-- С помощью цикла for выведите на экран числа от 1 до 100.
<?php
	// for ($i = 1; $i <= 100; $i++) {
	// 	echo $i . '<br>';
	// }
?> -->

<!-- С помощью цикла for выведите на экран числа от 11 до 33.
<?php
	// for ($i = 11; $i <= 33; $i++) {
	// 	echo $i . '<br>';
	// }
?> -->

<!-- С помощью цикла for выведите на экран четные числа в промежутке от 0 до 100.
<?php
	// for ($i = 0; $i <= 100; $i += 2) {
	// 	echo $i . '<br>';
	// }
?>  -->

<!-- С помощью цикла for выведите на экран нечетные числа в промежутке от 1 до 99.
<?php
	// for ($i = 1; $i <= 100; $i += 2) {
	// 	echo $i . '<br>';
	// }
?> -->

<!-- С помощью цикла for выведите на экран числа от 100 до 0.
<?php
	// for ($i = 100; $i >= 0; $i--) {
	// 	echo $i . '<br>';
	// }
?> -->

<!-- Найдите произведение целых чисел от 1 до 20.
<?php
	// $res = 0;
    // for ($i = 1; $i <= 20; $i++) {
    //     $res += $i;
    // }
    // echo $res . '<br>';
?> -->

<!-- Найдите сумму четных чисел от 2 до 100.
<?php
	// $res = 0;
    // for ($i = 2; $i <= 100; $i += 2) {
    //     $res += $i;
    // }
    // echo $res . '<br>';
?> -->

<!-- Найдите сумму нечетных чисел от 1 до 99.
<?php
	// $res = 0;
    // for ($i = 1; $i <= 100; $i += 2) {
    //     $res += $i;
    // }
    // echo $res . '<br>';
?>  -->

<!-- Дан массив с числами. Запустите цикл, который будет по очереди выводить элементы этого массива в консоль до тех пор, 
пока не встретится элемент со значением 0. После этого цикл должен завершить свою работу.
<?php
    // $arr = [1, 2, 3, 4, 5, 6, 345, 64, 24, 64, 672, 0, 5, 32, 54, 65, 8, 9];
    // foreach ($arr as $elem) {
    //     if ($elem == 0) {
    //         break;
    //     }
    //     echo $elem . '<br>';
    // }
?> -->

<!-- Дан массив с числами. Найдите сумму элементов, расположенных от начала массива до первого отрицательного числа.
<?php
    // $arr = [1, 2, 3, 4, 5, 6, 345, 64, 24, 64, 672, 0, -1, 5, 32, 54, 65, 8, 9];
    // $res = 0;
    // foreach ($arr as $elem) {
    //     if ($elem < 0) {
    //         break;
    //     };
    //     $res += $elem;
    // }
    // echo $res . '<br>';
?> -->

<!-- Дан массив с числами. Найдите позицию первого числа 3 в этом массиве (считаем, что это число обязательно есть в массиве). 
<?php
    // $arr = [1, 2, 33, 4, 5, 6, 345, 64, 24, 64, 672, 3, 0, -1, 5, 32, 54, 3, 65, 8, 9];
    // $position = 0;
    // foreach ($arr as $key => $elem) {
    //     if ($elem == 3) {
    //         $position = $key;
    //         break;
    //     };
    // }
    // echo $position . '<br>';
?> -->

<!-- Определите, сколько целых чисел, начиная с числа 1, нужно сложить, чтобы сумма получилась больше 100.
<?php
    // $sum = 0;
    // $count = 0;
    // while ($sum < 100) {
    //     $count++;
    //     echo $count;
    //     $sum += $count;
    //     echo $sum . '<br>';
    // }
    // echo "Для получения суммы больше 100 необходимо сложить $count чисел.";
?> -->

<!-- Проверьте, что в этом массиве есть элемент 'c'. Если есть - выведите 'да', а если нет - выведите 'нет'.
<?php
	// $arr = ['a', 'b', 'c', 'd', 'e'];
    // $flag = false;
    // foreach ($arr as $elem) {
    //     if ($elem == 'c') {
    //         $flag = true;
    //     }
    // }
    // if ($flag) {
    //     echo 'есть';
    // } else {
    //     echo 'нет';
    // }
?> -->

<!-- Дано число $num с неким начальным значением. Умножайте его на 3 столько раз, пока результат умножения не станет больше 1000. 
Какое число получится? Посчитайте количество итераций, необходимых для этого.
<?php
	// $num = 100;
	// $count = 0;
	// while ($num < 1000) {
    //     $count++;
    //     $num = $num * 3;
    //     echo $num . '<br>';
	// }
    // echo $count . ' количество итераций';
?> -->

<!-- Решите предыдущую задачу через цикл for.
<?php
    // for ($num = 100, $i = 0; $num < 1000; $num *= 3, $i++);
    // echo $i . ' количество итераций';
?> -->

<!-- С помощью цикла сформируйте строку, заполненную 5-тью нулями.
<?php
	// $str = '';
    // for ($i = 0; $i < 5; $i++) {
    //     $str = $str . 0;
    // }
    // echo $str;
?> -->

<!-- С помощью цикла сформируйте строку '123456789' и запишите ее в переменную $str. Выведите значение этой переменной на экран.
<?php
	// $str = '';
    // for ($i = 1; $i < 10; $i++) {
    //     $str = $str . $i;
    // }
    // echo $str;
?> -->

<!-- С помощью цикла сформируйте строку '987654321' и запишите ее в переменную $str. Выведите значение этой переменной на экран.
<?php
	// $str = '';
    // for ($i = 9; $i > 0; $i--) {
    //     $str = $str . $i;
    // }
    // echo $str;
?> -->

<!-- С помощью цикла сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную $str. Выведите значение этой переменной на экран.
<?php
	// $str = '-';
    // for ($i = 1; $i < 10; $i++) {
    //     $str = $str . $i . '-';
    // }
    // echo $str;
?> -->

<!-- С помощью двух вложенных циклов выведите на экран следующую строку:
111222333444555666777888999
<?php
	// for ($i = 1; $i <= 9; $i++) {
    //     for ($j = 1; $j <= 3; $j++) {
    //         echo $i;
    //     }
    // }
?> -->

<!-- С помощью двух вложенных циклов выведите на экран следующую строку:
11 12 13 21 22 23 31 32 33
<?php
	// for ($i = 1; $i <= 3; $i++) {
    //     for ($j = 1; $j <= 3; $j++) {
    //         echo  $i . $j . ' ';
    //     }
    // }
?> -->

<!-- Объявите пустой массив, а затем заполните его числами от 1 до 10. 
<?php
	$arr = [];
    // $arr[] = 1;
    // $arr[] = 2;
    // $arr[] = 3;
    // $arr[] = 4;
    // $arr[] = 5;
    // $arr[] = 6;
    // $arr[] = 7;
    // $arr[] = 8;
    // $arr[] = 9;
    // $arr[] = 10;
    // for ($i = 1; $i <= 10; $i++) {
    //     $arr[] = $i;
    // }
    // var_dump ($arr);
?> -->

<!-- Объявите пустой массив, а затем заполните его 5-ю буквами x.
<?php
	// $arr = [];
    // for ($i = 1; $i <= 5; $i++) {
    //     $arr[] = 'x';
    // }
    // var_dump ($arr);
?> -->

<!-- С помощью цикла заполните массив числами от 1 до 100.
<?php
	// $arr = [];
    // for ($i = 1; $i <= 100; $i++) {
    //     $arr[] = $i;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?>  -->

<!-- С помощью цикла заполните массив нечетными числами в промежутке от 1 до 99.
<?php
	// $arr = [];
    // for ($i = 1; $i <= 100; $i += 2) {
    //     $arr[] = $i;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- С помощью цикла for выведите все эти элементы на экран.
<?php
	// $arr = ['a', 'b', 'c', 'd', 'e'];
    // $length = count ($arr);
    // for ($i = 0; $i < $length; $i++){
    //     echo $arr[$i];
    // }
?> -->

<!-- С помощью цикла for выведите на экран все элементы этого массива, кроме последнего.
<?php
	// $arr = ['a', 'b', 'c', 'd', 'e'];
    // $length = count($arr) - 1;
    // for ($i = 0; $i < $length; $i++) {
    //     echo $arr[$i];
    // }
?> -->

<!-- С помощью цикла for выведите на экран первую половину элементов этого массива.
<?php
	// $arr = [1, 2, 3, 4, 5, 6, 7, 8];
    // $length = count($arr) / 2;
    // for ($i = 0; $i < $length; $i++) {
    //     echo $arr[$i];
    // }
?> -->

<!-- Дан массив с числами. Переберите этот массив циклом и возведите каждый элемент этого массива в квадрат.
<?php
	// $arr = [1, 2, 3, 4, 5];
	// $length = count($arr);
	
    // for ($i = 0; $i < $length; $i++) {
    //     $arr[$i] = $arr[$i] * 2;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Дан массив с числами. Переберите этот массив циклом и отнимите от каждого элемента единицу.
<?php
	// $arr = [1, 2, 3, 4, 5];
	// $length = count($arr);
	
    // for ($i = 0; $i < $length; $i++) {
    //     $arr[$i] = $arr[$i] - 1;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Дан массив с числами. Переберите этот массив циклом и прибавьте к каждому элементу 10.
<?php
	// $arr = [1, 2, 3, 4, 5];
	// $length = count($arr);
	
    // for ($i = 0; $i < $length; $i++) {
    //     $arr[$i] = $arr[$i] + 10;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Дан следующий массив с работниками и их зарплатами:
Увеличьте зарплату каждого работника на 10%.
<?php
	// $arr = [
	// 	'employee1' => 100,
	// 	'employee2' => 200,
	// 	'employee3' => 300,
	// 	'employee4' => 400,
	// 	'employee5' => 500,
	// 	'employee6' => 600,
	// 	'employee7' => 700,
	// ];

    // foreach ($arr as $key => $elem) {
    //     $arr[$key] = $arr[$key] * 1.1;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Модифицируйте предыдущую задачу так, чтобы зарплата увеличивалась только тем работникам, у которых она меньше или равна 400.
<?php
	// $arr = [
	// 	'employee1' => 100,
	// 	'employee2' => 200,
	// 	'employee3' => 300,
	// 	'employee4' => 400,
	// 	'employee5' => 500,
	// 	'employee6' => 600,
	// 	'employee7' => 700,
	// ];

    // foreach ($arr as $key => $elem) {
    //     if ($elem <= 400) {
    //     $arr[$key] = $arr[$key] * 1.1;
    //     }
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Найдите сумму ключей этого массива и поделите ее на сумму значений.
<?php
	// $arr = [1 => 6, 2 => 7, 3 => 8, 4 => 9, 5 => 10];
    // $sumKey = 0;
    // $sumElem = 0;

    // foreach ($arr as $key => $elem) {
    //     $sumKey += $key;
    //     $sumElem += $elem;
    // }
    // $res = $sumKey / $sumElem;
    // echo 'Сумма ключей - ' . $sumKey . '<br>' . 'Сумма элементов - ' . $sumElem . '<br>' . 'Результат деления - ' . $res;
?> -->

<!-- Запишите ключи этого массива в один массив, а значения - в другой.
<?php
	// $arr = ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5];
    // $arrKey = [];
    // $arrElem = [];

    // foreach ($arr as $key => $elem) {
    //     $arrKey[] = $key;
    //     $arrElem[] = $elem;
    // }
    // echo '<pre>';
    // print_r($arrKey);
    // print_r($arrElem);
    // echo '</pre>';
?> -->

<!-- Запишите в новый массив элементы, значение которых начинается с цифры 1 или цифры 2. 
То есть у вас в результате получится вот такой массив:
<?php
	// $arr = [
	// 	1 => 125,
	// 	2 => 225,
	// 	3 => 128,
	// 	4 => 356,
	// 	5 => 145,
	// 	6 => 281,
	// 	7 => 452,
	// ];
    // $newArr = [];

    // foreach ($arr as $key => $elem) {
    //     if ($elem < 299) {
    //         $newArr[$key] = $elem;
    //     }
    // }
    // echo '<pre>';
    // print_r($newArr);
    // echo '</pre>';
?> -->

<!-- Выведите с помощью цикла столбец чисел от 1 до 100.
<?php
    // $i = 1;
    // while ($i <= 100) {
    //     echo $i . '<br>';
    //     $i++;
    // }
?> -->

<!-- Выведите с помощью цикла столбец чисел от 100 до 1.
<?php
    // $i = 100;
    // while ($i >= 0) {
    //     echo $i . '<br>';
    //     $i--;
    // }
?> -->

<!-- Выведите с помощью цикла столбец четных чисел от 1 до 100.
<?php
    // $i = 0;
    // while ($i <= 100) {
    //     echo $i . '<br>';
    //     $i += 2;
    // }
?> -->

<!-- Заполните массив 10-ю иксами с помощью цикла.
<?php
    // $arr = [];
    // for ($i = 0; $i < 10; $i++) {
    //     $arr[$i] = 'x';
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Заполните массив числами от 1 до 10 с помощью цикла.
<?php
    // $arr = [];
    // for ($i = 1; $i <= 10; $i++) {
    //     $arr[] = $i;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Дан массив с числами. С помощью цикла выведите только те элементы массива, которые больше нуля и меньше 10-ти.
<?php
    // $arr = [-1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 245, 42, 234, 2];
    // foreach ($arr as $elem) {
    //     if ($elem > 0 and $elem < 10) {
    //         echo $elem . ' ';
    //     }
    // }
?> -->

<!-- Дан массив с числами. С помощью цикла проверьте, что в нем есть элемент со значением 5.
<?php
    // $arr = [-1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 245, 42, 234, 2];
    // foreach ($arr as $elem) {
    //     if ($elem === 5) {
    //         echo 'В массиве есть цифра 5';
    //     }
    // }
?> -->

<!-- Дан массив с числами. С помощью цикла найдите сумму элементов этого массива.
<?php
    // $arr = [-1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 245, 42, 234, 2];
    // $res = 0;
    // foreach ($arr as $elem) {
    //     $res = $res + $elem;
    // }
    // echo 'Сумма элементов массива: ' . $res;
?> -->

<!-- Дан массив с числами. С помощью цикла найдите сумму квадратов элементов этого массива.
<?php
    // $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    // $length = count($arr);
    // for ($i = 0; $i < $length; $i++) {
    //     $arr[$i] = $arr[$i] * 2;
    // }
    // echo '<pre>';
    // print_r($arr);
    // echo '</pre>';
?> -->

<!-- Дан массив с числами. Найдите среднее арифметическое его элементов (сумма элементов, делить на количество).
<?php
    // $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    // $sumElem = 0;
    // $length = count($arr);

    // foreach ($arr as $elem) {
    //     $sumElem += $elem;
    // }
    // $res = $sumElem / $length;
    // echo 'Количество элементов: ' . $length . '<br>';
    // echo 'Сумма элементов: '  . $sumElem . '<br>';
    // echo 'Среднее арифметическое ' . $res;
?> -->

<!-- Напишите скрипт, который будет находить факториал числа. Факториал - это произведение всех целых чисел, меньше данного, и его самого.
<?php
    // $number = 11;
    // $factorial = 1;

    // for ($i = 1; $i <= $number; $i++) {
    //     $factorial *= $i;
    // }

    // echo "Факториал числа $number равен $factorial";
?> -->

<!-- Выведите с его помощью элементы с текстом 'l', 'e', 'g' и 'a'.
<?php
	// $arr = [
	// 	['a', 'b', 'c'],
	// 	['d', 'e', 'f'],
	// 	['g', 'h', 'i'],
	// 	['j', 'k', 'l'],
	// ];
    // echo $arr[3][2] . ' ';
    // echo $arr[1][1] . ' ';
    // echo $arr[2][0] . ' ';
    // echo $arr[0][0] . ' ';
?> -->

<!-- Найдите сумму всех его элементов.
<?php
	// $arr = [
    //     [1, 2], 
    //     [3, 4], 
    //     [5, 6]
    // ];
    // $length = count($arr);
    // $sum = 0;
    // // for ($i = 0; $i < $length; $i++) {
    // //     foreach ($arr[$i] as $elem) {
    // //         $sum = $sum + $elem;
    // //     }
    // // }
    // foreach ($arr as $elem){
    //     foreach ($elem as $number){
    //         $sum = $sum + $number;
    //     }
    // }
    // echo $sum . '<br>';
?> -->

<!-- Найдите сумму всех элементов приведенного массива.
<?php
	// $arr = [
	// 	[
	// 		[1, 2],
	// 		[3, 4],
	// 	],
	// 	[
	// 		[5, 6],
	// 		[7, 8],
	// 	],
	// ];
    // $sum = 0;
    // foreach ($arr as $array1) {
    //     foreach ($array1 as $array2) {
    //         foreach ($array2 as $elem) {
    //             $sum += $elem;
    //         }
    //     }
    // }
    // echo $sum;
?> -->

<!-- Выведите с помощью этого массива имя первого мальчика и имя второй девочки.
<?php
	// $arr = [
	// 	'boys'  => [1 => 'Коля', 2 => 'Вася', 3 => 'Петя'],
	// 	'girls' => [1 => 'Даша', 2 => 'Маша', 3 => 'Лена'],
	// ];
    // echo $arr['boys'][1];
    // echo $arr['girls'][2];
?> -->

<!-- Выведите с помощью этого массива английское название среды.
<?php
	// $arr = [
	// 	'ru' => ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'],
	// 	'en' => ['mn', 'ts', 'wd', 'th', 'fr', 'st', 'sn'],
	// ];
    // echo $arr['en'][2];
?> -->

<!-- Выведите с помощью этого массива сумму зарплат первого и третьего юзера.
<?php
	// $arr = [
	// 	[
	// 		'name'   => 'user1',
	// 		'age'    => 30,
	// 		'salary' => 1000,
	// 	],
	// 	[
	// 		'name'   => 'user2',
	// 		'age'    => 31,
	// 		'salary' => 2000,
	// 	],
	// 	[
	// 		'name'   => 'user3',
	// 		'age'    => 32,
	// 		'salary' => 3000,
	// 	],
	// ];
    // echo $arr[0]['salary'];
    // echo $arr[2]['salary'];
?> -->

<!-- Найдите сумму всех элементов приведенного массива. Обращайтесь к каждому элементу по отдельности, без цикла.
<?php
	// $arr = [[1, 2, 3, [4, 5, [6, 7]]], [8, [9, 10]]];
    // $array1 = $arr[0][0] + $arr[0][1] + $arr[0][2] + $arr[0][3][0] + $arr[0][3][1] + $arr[0][3][2][0]  + $arr[0][3][2][1];
    // $array2 = $arr[1][0] + $arr[1][1][0] + $arr[1][1][1];
    // echo $sum = $array1 + $array2;
?> -->

<!-- С помощью двух вложенных циклов найдите сумму элементов этого массива.
<?php
	// $arr = [[1, 2, 3], [4, 5, 6, 7], [8, 9]];
    // $sum = 0;
    // foreach ($arr as $sub) {
    //     foreach ($sub as $elem) {
    //         $sum += $elem;
    //     }
    // }
    // echo 'Сумма всех эдементов массива $arr равна  ' . $sum;
?> -->

<!-- С помощью трех вложенных циклов найдите сумму элементов этого массива.
<?php
	// $arr = [
	// 	[
	// 		[1, 2, 3],
	// 		[6, 7, 8],
	// 		[3, 8, 4],
	// 		[6, 7, 9],
	// 	],
	// 	[
	// 		[9, 1, 2],
	// 		[4, 5, 6],
	// 	],
	// 	[
	// 		[9, 1, 2],
	// 		[4, 5, 6],
	// 		[5, 6, 3],
	// 	],
	// ];
    // $sum = 0;
    // foreach ($arr as $sub) {
    //     foreach ($sub as $subsub) {
    //         foreach ($subsub as $elem) {
    //             $sum += $elem;
    //         }
    //     }
    // }
    // echo $sum;
?> -->

<!-- Выведите элементы этого массива в формате ключ-значение.
<?php
	// $arr = [
	// 	[
	// 		'name'   => 'user1',
	// 		'age'    => 30,
	// 		'salary' => 1000,
	// 	],
	// 	[
	// 		'name'   => 'user2',
	// 		'age'    => 31,
	// 		'salary' => 2000,
	// 	],
	// 	[
	// 		'name'   => 'user3',
	// 		'age'    => 32,
	// 		'salary' => 3000,
	// 	],
	// ];
    // foreach ($arr as $sub) {
    //     foreach ($sub as $key => $elem) {
    //     echo $key . ' ' . $elem . '<br>';
    //     }
    // }
?> -->

<!-- С помощью двух вложенных циклов выведите элементы этого массива в формате имя группы - имя юзера.
<?php
	// $arr = [
	// 	'group1'  => ['user11', 'user12', 'user13', 'user43'],
	// 	'group2'  => ['user21', 'user22', 'user23'],
	// 	'group3'  => ['user31', 'user32', 'user33'],
	// 	'group4'  => ['user41', 'user42', 'user43'],
	// 	'group5'  => ['user51', 'user52'],
	// ];
    // $sum = '';
    // foreach ($arr as $key => $sub) {
    //     foreach ($sub as $elem) {
    //         echo $key . ' - ' . $elem . '<br>';
    //     }
    // }
?> -->

<!--Сформируйте с помощью двух вложенных циклов следующий массив:-->
<!--[[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]-->
<?php
//$arr = [];
//
//for ($i = 0; $i < 3; $i++) {
//    for ($j = 0; $j < 5; $j++) {
//        $arr[$i][$j] = $j + 1;
//    }
//}
//echo '<pre>';
//print_r($arr);
//echo '</pre>';
//?>

<!--Сформируйте с помощью двух вложенных циклов следующий массив:-->
<!--[['x', 'x', 'x', 'x'], ['x', 'x', 'x', 'x'], ['x', 'x', 'x', 'x']]-->
<?php
//    $arr = [];
//    for ($i = 0; $i < 3; $i++) {
//        for ($j = 0; $j < 4; $j++) {
//            $arr[$i][$j] = 'x';
//        }
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Сформируйте с помощью трех вложенных циклов следующий массив:-->
<!--[-->
<!--[-->
<!--[1, 2, 3, 4, 5],-->
<!--[1, 2, 3, 4, 5],-->
<!--],-->
<!--[-->
<!--[1, 2, 3, 4, 5],-->
<!--[1, 2, 3, 4, 5],-->
<!--],-->
<!--[-->
<!--[1, 2, 3, 4, 5],-->
<!--[1, 2, 3, 4, 5],-->
<!--],-->
<!--]-->
<?php
//    $arr = [];
//    for ($i = 0; $i <3; $i++) {
//        for ($j = 0; $j < 3; $j++) {
//            for ($k = 0; $k < 5; $k++) {
//                $arr[$i][$j][$k] = $k + 1;
//            }
//        }
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Сформируйте с помощью двух вложенных циклов следующий массив:-->
<!--[[1, 2], [3, 4], [5, 6], [7, 8]]-->
<?php
//    $arr = [null];
//    $k = 1;
//    for ($i = 0; $i < 4; $i++) {
//        for ($j = 0; $j < 2; $j++) {
//            $arr[$i][$j] = $k;
//            $k++;
//        }
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Сформируйте с помощью двух вложенных циклов следующий массив:-->
<!--[[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]]-->
<?php
//    $arr = [];
//    $k = 2;
//    for ($i = 0; $i < 4; $i++) {
//        for ($j = 0; $j < 3; $j++) {
//            $arr[$i][$j] = $k;
//            $k += 2;
//        }
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Сформируйте с помощью трех вложенных циклов следующий трехмерный массив:-->
<!--[[[1, 2], [3, 4]], [[5, 6], [7, 8]]]-->
<?php
//    $arr = [];
//    $n = 1;
//    for ($i = 0; $i < 2; $i++) {
//        for ($j = 0; $j < 2; $j++) {
//            for ($k = 0; $k < 2; $k++) {
//                $arr[$i][$j][$k] = $n;
//                $n++;
//            }
//        }
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Выведите с помощью этого массива столбец продуктов в каком-нибудь придуманном вами формате.-->
<?php
//    $products = [
//        [
//            'name'   => 'мясо',
//            'price'  => 100,
//            'amount' => 5,
//        ],
//        [
//            'name'   => 'овощи',
//            'price'  => 200,
//            'amount' => 6,
//        ],
//        [
//            'name'   => 'фрукты',
//            'price'  => 300,
//            'amount' => 7,
//        ],
//    ];
//    foreach ($products as $item) {
//        echo 'Список продуктов: ' . $item['name'] . '<br>';
//        }
//?>

<?php
//    $users = [
//        [
//            'id' => 11,
//            'name' => 'name11',
//            'surname' => 'surname11',
//        ],
//        [
//            'id' => 14,
//            'name' => 'name14',
//            'surname' => 'surname14',
//        ],
//        [
//            'id' => 17,
//            'name' => 'name17',
//            'surname' => 'surname17',
//        ],
//    ];
//    $res = [];
//
//    foreach ($users as $user) {
//        $res[$user['id']] = $user;
//    }
//    echo '<pre>';
//    print_r($res);
//    echo '</pre>';
//?>

<!--Дан список городов и их стран, хранящийся в следующей структуре:-->
<!--Напишите код, которой переделает структуру данных вот в такую:-->
<?php
//    $arr = [
//        [
//            'country' => 'Россия',
//            'city' =>    'Москва',
//        ],
//        [
//            'country' => 'Беларусь',
//            'city' =>    'Минск',
//        ],
//        [
//            'country' => 'Россия',
//            'city' =>    'Питер',
//        ],
//        [
//            'country' => 'Россия',
//            'city' =>    'Владивосток',
//        ],
//        [
//            'country' => 'Украина',
//            'city' =>    'Львов',
//        ],
//        [
//            'country' => 'Беларусь',
//            'city' =>    'Могилев',
//        ],
//        [
//            'country' => 'Украина',
//            'city' =>    'Киев',
//        ],
//    ];
//    $res = [];
//
//    foreach ($arr as $item) {
//        $country = $item['country'];
//        $city = $item['city'];
//        if ($country == $country) {
//            $res[$country][] = $item['city'];
//        }
//        }
//    echo '<pre>';
//    print_r($res);
//    echo '</pre>';
//    ?>

<!--Дан список событий за определенные даты, хранящийся в следующей структуре:-->
<!--Напишите код, которой переделает структуру данных вот в такую:-->
<?php
//    $arr = [
//        [
//            'date'  => '2019-12-29',
//            'event' => 'name1'
//        ],
//        [
//            'date'  => '2019-12-31',
//            'event' => 'name2'
//        ],
//        [
//            'date'  => '2019-12-29',
//            'event' => 'name3'
//        ],
//        [
//            'date'  => '2019-12-30',
//            'event' => 'name4'
//        ],
//        [
//            'date'  => '2019-12-29',
//            'event' => 'name5'
//        ],
//        [
//            'date'  => '2019-12-31',
//            'event' => 'name6'
//        ],
//        [
//            'date'  => '2019-12-29',
//            'event' => 'name7'
//        ],
//        [
//            'date'  => '2019-12-30',
//            'event' => 'name8'
//        ],
//        [
//            'date'  => '2019-12-30',
//            'event' => 'name9'
//        ],
//    ];
//    $res = [];
//    foreach ($arr as $item) {
//        $date = $item['date'];
//        $event = $item['event'];
//        if(!isset($res[$date])) {
//            $res[$date] = [];
//        }
//        $res[$date][] = $event;
//        }
//    echo '<pre>';
//    print_r($res);
//    echo '</pre>';
//    ?>

<!--Напишите код, которой переделает структуру данных вот в такую:-->
<!--[-->
<!--[-->
<!--'date'  => '2019-12-29',-->
<!--'event' => 'name1'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-29',-->
<!--'event' => 'name2'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-29',-->
<!--'event' => 'name3'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-29',-->
<!--'event' => 'name4'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-30',-->
<!--'event' => 'name5'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-30',-->
<!--'event' => 'name6'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-30',-->
<!--'event' => 'name7'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-31',-->
<!--'event' => 'name8'-->
<!--],-->
<!--[-->
<!--'date'  => '2019-12-31',-->
<!--'event' => 'name9'-->
<!--],-->
<!--]-->
<?php
//    $arr = [
//        '2019-12-29'=> ['name1', 'name2', 'name3', 'name4'],
//        '2019-12-30'=> ['name5', 'name6', 'name7'],
//        '2019-12-31'=> ['name8', 'name9'],
//    ];
//    $res = [];
//
//    foreach ($arr as $key => $item) {
//        foreach ($item as $elem) {
//            $res[] = ['date' => $key, 'event' => $elem];
//        }
//    }
////var_dump($res);
//    echo '<pre>';
//    print_r($res);
//    echo '</pre>';
//?>

<!--Изучите теорию по следующим ссылкам:-->
<!--sqrt pow-->
<?php
//    echo sqrt(245); // Функция sqrt находит квадратный корень числа.
//    echo pow(2, 10); // Функция pow возводит число в заданную степень.
//?>

<!--Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.-->
<?php
//    $arr = [4, 2, 5, 19, 13, 0, 10];
//    $res = null;
//    foreach ($arr as $item) {
//        $res += $item * $item;
//    }
//    echo sqrt($res);
//?>

<?php
//    echo round(1553.76876, -3); // Функция round округляет число по правилам математического округления.
// Первым параметром функция принимает число, а вторым необязательным параметром - сколько знаков оставить в дробной части.
// Второй параметр может быть как положительным, так и отрицательным (в этом случае он указывает сколько знаков оставить в целой части).
//    echo ceil(15.2); // Функция ceil округляет дробь в большую сторону до целого.
// Это значит, что независимо от цифры в начале дробной части, дробь все равно округлится с увеличением целой части на 1. К примеру, 12.1 округлится к 13.
//    echo floor(15.2); // Функция floor округляет дробь в меньшую сторону.
// Это значит, что независимо от цифры в начале дробной части, дробь все равно округлится без увеличения целой части на 1. К примеру, 12.9 округлится к 12.
?>

<!--Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.-->
<?php
//    $num = 379;
//    $sumOfSquares = sqrt($num);
//    $numInt = round($sumOfSquares);
//    $numRoundTen = round($sumOfSquares, 1);
//    $numRoundHund = round($sumOfSquares, 2);
//    echo 'Квадратный корень из 379 равен ' . $sumOfSquares . '<br>';
//    echo 'Результат округления до целого числа '. $numInt . '<br>';
//    echo 'Результат округления до десятых ' . $numRoundTen . '<br>';
//    echo 'Результат округления до сотых ' . $numRoundHund;
//?>

<!--Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.-->
<?php
//    $num = 587;
//    $sumOfSquares = sqrt($num);
//    $sumCeil = ceil($sumOfSquares);
//    $sumFloor = floor($sumOfSquares);
//    $res['ceil'] = $sumCeil;
//    $res['floor'] = $sumFloor;
//    echo 'Квадратный корень из 587 равен ' . $sumOfSquares . '<br>';
//    echo '<pre>';
//    print_r($res);
//    echo '</pre>';
//?>

<!--Функция min-->
<?php
//    echo min(1, 2, 3); // Функция min находит самое маленькое число из переданных ей параметрами или самое маленькое число среди элементов массива.
//    $arr = [4, 2, 5, 19, 13, 0, 10];
//    echo min($arr);
//?>

<!--Функция max-->
<?php
//    echo max(1, 2, 3); // Функция max находит самое большое число из переданных ей параметрами или самое большое число среди элементов массива.
//    $arr = [4, 2, 5, 19, 13, 0, 10];
//    echo max($arr);
//?>

<!--Найдите минимальное и максимальное число.-->
<?php
//    $arr = [4, -2, 5, 19, -130, 0, 10];
//    $numMax = max($arr);
//    $numMin = min($arr);
//    echo 'Максимальное число ' . $numMax . '<br>';
//    echo 'Минимальное число ' . $numMin;
//?>

<!--Функция mt_rand-->
<?php
//    echo mt_rand(5, 15); // Функция mt_rand генерирует случайное целое число в заданном промежутке.
//?>

<!--Выведите на экран случайное целое число от 1 до 100.-->
<?php
//    $num = 1;
//    while ($num <= 10) {
//        echo mt_rand($num, 10) . '<br>';
//        $num++;
//    }
//
//?>

<!--С помощью цикла заполните массив 10-ю случайными целыми числами.-->
<?php
//    $arr = [null];
//    for ($i = 0; $i < 10; $i++) {
//        $arr[$i] = mt_rand(1, 100);
//    }
//    echo '<pre>';
//    print_r($arr);
//    echo '</pre>';
//?>

<!--Функция abs-->
<?php
//echo abs(-15); // Функция abs вычисляет модуль числа, то есть из отрицательного делает положительное.
//?>

<!--Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.-->
<?php
//    $a = 12;
//    $b = 20;
//    $numModul = abs($a - $b);
//    echo $numModul;
//?>

<!--Функция strtolower-->
<?php
//echo strtolower('ABCDE'); // Функция strtolower преобразовывает строку в нижний регистр.
//// Данная функция неправильно работает с кириллицей. Используйте функцию mb_strtolower (она работает аналогичным образом, но корректно обрабатывает кириллицу).
//?>

<!--Функция strtoupper-->
<?php
//echo strtoupper('abcde'); // Функция strtoupper преобразовывает строку в верхний регистр.
//// Данная функция неправильно работает с кириллицей. Используйте функцию mb_strtoupper (она работает аналогичным образом, но корректно обрабатывает кириллицу).
//?>

<!--Функция ucfirst-->
<?php
//echo ucfirst('abcde'); // Функция ucfirst преобразует первый символ строки в верхний регистр. Не работает с кириллицей.
//?>

<!--Функция lcfirst-->
<?php
//echo lcfirst('Abcde'); // Функция lcfirst преобразует первый символ строки в нижний регистр. Не работает с кириллицей.
//?>

<!--Функция ucwords-->
<?php
//echo ucwords('lorem ipsum dolor sit amet'); // Функция ucwords преобразует первый символ каждого слова в строке в верхний регистр. Не работает с кириллицей.
//?>

<!--Дана строка 'php'. Сделайте из нее строку 'PHP'.-->
<?php
//    $str = 'php';
//    echo strtoupper($str);
//?>

<!--Дана строка 'PHP'. Сделайте из нее строку 'php'.-->
<?php
//    $str = 'PHP';
//    echo strtolower($str);
//?>

<!--Дана строка 'london'. Сделайте из нее строку 'London'.-->
<?php
//    $str = 'London';
//    echo lcfirst($str);
//?>

<!--Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'.-->
<?php
//    $str = 'london is the capital of great britain';
//    echo ucwords($str);
//?>

<!--Дана строка 'LONDON'. Сделайте из нее строку 'London'.-->
<?php
//    $str = 'LONDON';
//    $str = mb_strtolower($str);
//    $res = ucfirst($str);
//    echo $res;
//?>

<!--Функция strlen-->
<?php
//echo strlen('abcde'); // Функция strlen возвращает длину строки (количество символов в строке).
//// Данная функция неправильно работает с кириллицей. Используйте функцию mb_strlen (она работает аналогичным образом, но корректно обрабатывает кириллицу).
//?>

<!--Дана строка 'html css php'. Найдите количество символов в этой строке.-->
<?php
//    $str = 'html css php';
//    echo strlen($str);
//?>

<!--Дана переменная $password, в которой хранится пароль пользователя. -->
<!--Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.-->
<?php
//    $password = '12345678910';
//    $countStr = strlen($password);
//    if($countStr >= 5 and $countStr < 10) {
//        echo 'Пароль подходит';
//    } else {
//        echo 'Пароль не подходит';
//    }
//?>

<!--Функция substr-->
<?php
//echo substr('abcde', -2); // Функция substr вырезает и возвращает подстроку из строки. Сама строка при этом не изменяется.
////Первым параметром функция принимает строку, вторым - позицию символа, откуда следует начинать вырезание, а третьим - количество символов. Учтите, что нумерация символов строки начинается с нуля.
////Второй параметр может быть отрицательным - в этом случае отсчет начнется с конца строки, при этом последний символ будет иметь номер -1.
////Третий параметр можно не указывать - в этом случае отрезание произойдет до конца строки.
////Данная функция неправильно работает с кириллицей. Используйте функцию mb_substr (она работает аналогичным образом, но корректно обрабатывает кириллицу).
//?>

<?php
    $str = 'html css php';
    